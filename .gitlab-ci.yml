variables:
  DEPLOY_DIR: /var/www/kostkarubika.net
  PROD_RELEASE_NAME: release-$CI_BUILD_ID
  STAGE_RELEASE_NAME: stage-$CI_BUILD_ID

generate html:
  image: alpine:3.4
  stage: build
  script:
    - apk --update add wget curl git openssh-client php5 php5-curl php5-openssl php5-json php5-phar php5-dom php5-ctype
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/bin --filename=composer
    - composer install
    - php ./vendor/bin/pscss -f compressed src/assets/sass/main.scss > src/assets/css/main.css
    - php ./vendor/bin/cubedrop.php generate --env=prod  
  artifacts:
    paths:
      - web/
  tags: [docker]

deploy to production:
  environment: production
  image: alpine:3.4
  stage: deploy
  script:
    - mv -v web $PROD_RELEASE_NAME
    - rsync -avWpz $PROD_RELEASE_NAME $DEPLOY_DIR/
    - ln -svfn $DEPLOY_DIR/$PROD_RELEASE_NAME $DEPLOY_DIR/current
  tags: [shell]
  only: [master]

deploy to staging:
  environment: staging
  image: alpine:3.4
  stage: deploy
  script:
    - mv -v web $STAGE_RELEASE_NAME
    - rsync -avWpz $STAGE_RELEASE_NAME $DEPLOY_DIR/
    - ln -svfn $DEPLOY_DIR/$STAGE_RELEASE_NAME $DEPLOY_DIR/staging
  tags: [shell]
  except: [master]
